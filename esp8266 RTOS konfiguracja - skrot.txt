----------------------------------------------------------------------------------------------
KONFIGURACJA MinGW
----------------------------------------------------------------------------------------------
Stworzy� plik o nazwie "export_idf_path.sh" w folderze
C:\msys32_org\etc\profile.d\export_idf_path.sh

w pliku wpisa� jedn� lini� (zgodnie z informacj� w lekcji wideo)
export IDF_PATH="$HOME/ESP8266_RTOS"

Uruchomi� konsol� DOS/CMD a w niej przej�� do folderu
cd c:\msys32

i uruchomi� plik: mingw32.exe

Po uruchomieniu konsoli MinGW sprawdzi� czy wida� �cie�k� z pliku "export_idf_path.sh" poleceniem
printenv IDF_PATH

je�li wida� �cie�k�, to wyda� polecenie: (�eby zaktualizowa� pliki pythona na potrzeby projekt�w ESP)
python.exe -m pip install -r $IDF_PATH/requirements.txt

----------------------------------------------------------------------------------------------
-- KONFIGURACJA ECLIPSE ----------------------------------------------------------------------
----------------------------------------------------------------------------------------------

ZROBI� USTAWIENIA W nowym workspace dla RTOS - globalne: (zgodnie z lekcj� wideo)
- wy��czy� Launchbar
- w��czy� auto_save
- wy��czy� spelling
- odbindowa� polecenia w keys dla CTRL+ALT+C

w Menu: Window/Preferences C/C++/Build/Environment doda� dwie �cie�ki:

IDF_PATH	C:\msys32\home\admin\ESP8266_RTOS\
PATH		C:\msys32\xtensa-lx106-elf\bin;C:\msys32\usr\bin;C:\msys32\mingw32\bin;



----------------------------------------------------------------------------------------------

SKOPIOWA� projekt "hello_world" z RTOS SDK z folderu EXAMPLES/get_started - mo�na bezpo�rednio do "workspace_RTOS"

ZAIMPORTOWA� projekt do Eclipsa "as makefile project"  


----------------------------------------------------------------------------------------------
SKONFIGUROWA� PROJEKT W ECLIPSE

w Menu: Project/Properties C/C++/Build ---> zak�adka [Behavior]
Mo�na w��czy� opcj�: "Enable paralell build" i ustawi� 8 albo nawet 12 w�tk�w (jobs)


w Menu: Project/Properties C/C++/Build/Environment ---> poprawi� �cie�k� PATH po imporcie projektu:
PATH		C:\msys32\xtensa-lx106-elf\bin;C:\msys32\usr\bin;C:\msys32\mingw32\bin;



w Menu: Project/Properties C/C++/General/Project and Symbols ---> zak�adka [Includes] / Languages/GNU C
doda� wszystkie �cie�ki poni�ej:

C:\msys32\xtensa-lx106-elf\xtensa-lx106-elf\include
C:\msys32\xtensa-lx106-elf\xtensa-lx106-elf\sys-include
C:\msys32\home\admin\ESP8266_RTOS\components\freertos\include
C:\msys32\home\admin\ESP8266_RTOS\components\esp8266\include
C:\msys32\home\admin\ESP8266_RTOS\components\spi_flash\include
C:\msys32\home\admin\ESP8266_RTOS\components\freertos\port\esp8266\include\freertos
C:\msys32\home\admin\ESP8266_RTOS\components\freertos\include\freertos\private

C:\msys32\home\admin\ESP8266_RTOS\components\esp_common\include			// #include "esp_err.h"
C:\msys32\home\admin\ESP8266_RTOS\components\log\include				// #include "esp_log.h"
C:\msys32\usr\lib\gcc\i686-pc-msys\7.3.0\include					// #include <stdbool.h>

													----- Na potrzeby WIFI -------
c:\msys32\home\admin\ESP8266_RTOS\components\esp_event\include			// #include "esp_event.h"
c:\msys32\home\admin\ESP8266_RTOS\components\tcpip_adapter\include\		// #include "tcpip_adapter.h"
c:\msys32\home\admin\ESP8266_RTOS\components\nvs_flash\include\			// #include "nvs_flash.h"

													----- Na potrzeby UDP/TCP -------
c:\msys32\home\admin\ESP8266_RTOS\components\lwip\lwip\src\include		// #include "lwip/sockets.h"
													// #include "lwip/err.h"
													// #include "lwip/sys.h"
													// #include <lwip/netdb.h>
													//

													----- Na potrzeby FOTA -------
c:\msys32\home\admin\ESP8266_RTOS\components\app_update\include\			// #include "esp_ota_ops.h"
c:\msys32\home\admin\ESP8266_RTOS\components\bootloader_support\include\	// #include "esp_app_format.h"

													----- Na potrzeby FOTA i HTTP -------
c:\msys32\home\admin\ESP8266_RTOS\components\esp_http_client\include\		// #include "esp_http_client.h"
c:\msys32\home\admin\ESP8266_RTOS\components\esp_https_ota\include\		// #include "esp_https_ota.h"


----------------------------------------------------------------------------------------------

w kodzie �r�d�owym nain doda� inkludes:

#include "portmacro.h"
#include "FreeRTOSConfig.h"
#include "../build/include/sdkconfig.h"


----------------------------------



---------------------
U W A G A  !
---------------------

Aby pozby� si� ma�ego wykrzykniczka przy nazwie projektu wej�� do:

Project/Properties/�C/C++ General� -> �Preprocessor Include Paths� i zak�adka [Providers]

Na li�cie jest opcja:  �CDT Cross GCC Built-in Compiler Settings�
klikn�� i zmieni� zawarto�� pola: �Command to get compiler specs� na: 
xtensa-lx106-elf-gcc ${FLAGS} -E -P -v -dD "${INPUTS}"

Kolejna opcja na li�cie: �CDT GCC Build Output Parser� 
klikn�� i zmieni� zawarto�� pola: �Compiler command pattern� na:
xtensa-lx106-elf-(gcc|g\+\+|c\+\+|cc|cpp|clang)


..........................
NA KONIEC ! ;)
..........................

warto wej�� do: 

 Project/Properties/�C/C++ General� -> �Indexer�

zaznaczy� na g�rze ptaka: �Enable project specific settings�
a nast�pnie wy��czy� ptaka o nazwie: �Allow heuristic resolution of includes�

uuuuf to na prawd� ju� koniec ;)


musi byc power shell zeby pwd dzialalo
-v $(pwd):/backup
cp -r $IDF_PATH/examples/get-started/hello_world .